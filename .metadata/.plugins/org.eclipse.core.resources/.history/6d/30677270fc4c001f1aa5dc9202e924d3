package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import connection.DBConnection;
import model.User;

public class UserDAO {

	public static void insertUser(User user) {
		try {
			Connection conn = DBConnection.getConnection();
			String sql = "insert into users(name, email, password) values (?, ?, ?)";
			PreparedStatement pst = conn.prepareStatement(sql);
			pst.setString(1, user.getName());
			pst.setString(2, user.getEmail());
			pst.setString(3, user.getPassword());
			int rows = pst.executeUpdate();
			System.out.println("Rows affected: " + rows);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static boolean emailExists(String email) {
		try {
			Connection conn = DBConnection.getConnection();
			String sql = "select id from users where email = ? ";
			PreparedStatement pst = conn.prepareStatement(sql);
			pst.setString(1, email);
			ResultSet res = pst.executeQuery();
			if (res.next()) {
				return true;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return false;
	}

	public static User userDetails(int id) {
		User u1 = null;
		try {
			Connection conn = DBConnection.getConnection();
			String sql = "select * from users where id = ?";
			PreparedStatement pst = conn.prepareStatement(sql);
			pst.setInt(1, id);
			ResultSet rs = pst.executeQuery();
			if (rs.next()) {
				u1 = new User();
				String gethobbies = "select hobby from hobbies where user_id = ? ";
				PreparedStatement hobbypost = conn.prepareStatement(gethobbies);
				hobbypost.setInt(1, id);
				ResultSet rs1 = hobbypost.executeQuery();
				List<String> hobbyList = new ArrayList<String>();
				while(rs1.next()) {
					hobbyList.add(rs1.getString("hobby"));
				}
				u1.setHobbies(hobbyList);
				u1.setId(id);
				u1.setEmail(rs.getString("email"));
				u1.setName(rs.getString("name"));
				u1.setPassword(rs.getString("password"));
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return u1;
	}

	public static List<User> AllUsers() {
		List<User> users = new ArrayList<User>();

		Connection conn = DBConnection.getConnection();
		String sql = "select * from users";
		try {
			PreparedStatement pst = conn.prepareStatement(sql);
			ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				User u1 = new User();
				u1.setEmail(rs.getString("email"));
				u1.setId(rs.getInt("id"));
				u1.setName(rs.getString("name"));
				u1.setPassword(rs.getString("password"));
				users.add(u1);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return users;

	}

	public static void insertHobbies(String[] hobbies,int id) {
		try {
			Connection conn = DBConnection.getConnection();
			// If it exists then don't insert it again
			String deleteQuery = "delete from hobbies where user_id = ?";
			PreparedStatement deletePst = conn.prepareStatement(deleteQuery);
			deletePst.setInt(id, id);
			deletePst.executeUpdate();
			String sql = "insert into hobbies (user_id, hobby) values (?, ?)";
			for(int i = 0;i<hobbies.length;i++) {
				PreparedStatement pst = conn.prepareStatement(sql);
				pst.setInt(1, id);
				pst.setString(2, hobbies[i]);
				pst.executeUpdate();
				System.out.println("Inserted the hobbies");
				
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public static List<String> getHobbies(User u){
		List<String> hobbies = new ArrayList<>();
		String sql = "select * from hobbies where user_id = ? ";
		try {
			Connection conn = DBConnection.getConnection();
			PreparedStatement pst = conn.prepareStatement(sql);
			pst.setInt(1, u.getId());
			ResultSet rs = pst.executeQuery();
			while(rs.next()) {
				hobbies.add(rs.getString("hobby"));
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return hobbies;
	}
	
	public static void UpdateUser(User u) {
		try {
			Connection conn = DBConnection.getConnection();
			String sql = "update users set name = ?, email = ?, password = ?, gender= ? where id = ?";
			PreparedStatement pst = conn.prepareStatement(sql);
			pst.setString(1, u.getName());
			pst.setString(2, u.getEmail());
			pst.setString(3, u.getPassword());
			pst.setString(4, u.getGender());
			pst.setInt(5, u.getId());
			UserDAO.insertHobbies(u.getHobbies(), u.getId());
			
			pst.executeUpdate();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static User Login(String email, String password) {
		User u = null;
		try {
			Connection conn = DBConnection.getConnection();
			String sql = "SELECT * FROM users WHERE email= ? AND password = ?";
			PreparedStatement pst = conn.prepareStatement(sql);
			pst.setString(1, email);
			pst.setString(2, password);
			ResultSet rs = pst.executeQuery();
			if (rs.next()) {
				u = new User();
				u.setEmail(rs.getString("email"));
				u.setId(rs.getInt("id"));
				u.setName(rs.getString("name"));
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return u;
	}

}
